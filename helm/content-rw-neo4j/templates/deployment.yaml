apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      serviceAccountName: {{ .Values.serviceAccount }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: NEO_URL
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: neo4j.cluster.bolt.url
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: neo4j.statements.batch.size
        ports:
        - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: "/__gtg"
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 4
        resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- if .Values.openPolicyAgentSidecar }}
      - name: "{{ .Values.openPolicyAgentSidecar.name }}"
        image: "{{ .Values.openPolicyAgentSidecar.repository }}:{{ .Values.openPolicyAgentSidecar.tag }}"
        imagePullPolicy: {{ .Values.openPolicyAgentSidecar.pullPolicy }}
        env:
          - name: POLICY_BUCKET
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: opa.policy2.bucket
        ports:
          - name: http
            containerPort: 8181
        livenessProbe:
          httpGet:
            path: /health
            scheme: HTTP
            port: 8181
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health?bundle=true
            scheme: HTTP
            port: 8181
          initialDelaySeconds: 5
          periodSeconds: 10
        args:
          - "run"
          - "--ignore=.*"
          - "--server"
          - "--set=decision_logs.console=true"
          - "--log-format=json-pretty"
          - "--set=services.bundlesS3Bucket.url=$(POLICY_BUCKET)"
          # The region below is hardcoded because the default location for the bucket (the one appended to the url above) is set to eu-west-1, it's not a mistake.
          - "--set=services.bundlesS3Bucket.credentials.s3_signing.web_identity_credentials.aws_region=$(AWS_REGION)"
          - "--set=bundles.contentRWNeo4j.service=bundlesS3Bucket"
          - "--set=bundles.contentRWNeo4j.resource=content-rw-neo4j.bundle.tar.gz"
          - "--set=bundles.contentRWNeo4j.polling.min_delay_seconds=120"
          - "--set=bundles.contentRWNeo4j.polling.max_delay_seconds=300"
      {{- end}}
