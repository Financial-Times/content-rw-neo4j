version: 2.1

orbs:
  ft-golang-ci: financial-times/golang-ci@1

jobs:
  dredd:
    working_directory: /go/src/github.com/Financial-Times/content-rw-neo4j
    docker:
    - image: golang:1
      environment:
        GOPATH: /go
        NEO4J_TEST_URL: "bolt://neo4j:7687"
    - image: neo4j:4.3.6-enterprise
      environment:
        NEO4J_AUTH: none
        NEO4J_HEAP_MEMORY: 256
        NEO4J_CACHE_MEMORY: 256M
        NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    steps:
    - checkout
    - run:
        name: Unset ssh instead of https
        command: git config --global --unset url."ssh://git@github.com".insteadOf
    - run:
        name: Set GITHUB_USERNAME and GITHUB_TOKEN
        command: git config --global url."https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com".insteadOf "https://github.com"
    - run:
        name: Go Build
        command: go build -mod=readonly -v
    - run:
        name: Download dredd
        command: |
            curl -sL https://deb.nodesource.com/setup_14.x | bash -
            DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs=14.\*
            npm install -g --unsafe-perm --loglevel warn --user 0 --no-progress dredd@8.0.0
            rm -rf /var/lib/apt/lists/*
    - run:
        name: Dredd API Testing
        command: dredd

workflows:
  tests_and_docker:
    jobs:
      - dredd
      - ft-golang-ci/build-and-test:
          name: build-and-test-project
          executor-name:
            name: ft-golang-ci/default-with-neo4j
      - ft-golang-ci/docker-build:
          name: build-docker-image
          requires:
            - build-and-test-project
  snyk-scanning:
    jobs:
      - ft-golang-ci/scan:
          name: scan-dependencies
          context: cm-team-snyk
